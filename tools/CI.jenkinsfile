#!groovy
@Library('jenkins-pipeline-lib') _

pipeline
{
  agent any
  environment
  {
    GIT_CHANGE_LOG = gitChangeLog(currentBuild.changeSets)
  }
  stages
  {
    stage('Build')
    {
      steps
      {
        sh 'make'
      }
    }
    stage('Test')
    {
      steps
      {
        sh 'make test'
      }
      post
      {
        always
        {
          // Report Tests
          junit 'buildresults/test/*.xml'
        }
      }
    }
    stage('CppCheck')
    {
      steps
      {
        sh 'make cppcheck-xml'
      }
      post
      {
        always
        {
          publishCppcheck healthy: '5', newFailureThreshold: '5', newThreshold: '50', pattern: '**/cppcheck.xml', threshold: '25', unHealthy: '100'
        }
      }
    }
    stage('Clang Analyzer')
    {
      steps
      {
        sh 'make analyze'
      }
    }
    stage('Documentation')
    {
      steps
      {
        sh 'make docs'
      }
    }
    stage('Format')
    {
      steps
      {
        clangFormat()
      }
    }
  }
  post
  {
    always
    {
      slackNotify(currentBuild.currentResult)
    }
  }
}
